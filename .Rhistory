plot(x, y, type = 'l')
y = 50*sin(x/2)
plot(x, y, type = 'l')
y = 50*sin(x/4)
plot(x, y, type = 'l')
y = 50*sin(x/6)
y = 50*sin(x/6)
plot(x, y, type = 'l')
x = 1:45
y = 50*sin(x/6)
plot(x, y, type = 'l')
y = 1000*sin(x/6)
plot(x, y, type = 'l')
y = 1000 + 1000*sin(x/6)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + rpois(length(x), 10)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + rpois(length(x), 100)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + rpois(length(x), 10000)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + rpois(length(x), 1/100)
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + abs(rnorm(length(x), sd = 50))
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + abs(rnorm(length(x), sd = 500))
plot(x, y, type = 'l')
y = 1500 + 1000*sin(x/6) + log(rnorm(length(x), sd = 500)))
y = 1500 + 1000*sin(x/6) + log(rnorm(length(x), sd = 500))
plot(x, y, type = 'l')
x = 1:45
y = 1500 + 1000*sin(x/6)
plot(x, y, type = 'l')
x2 = 1:14
plot(x2, y2, type = 'l')
y2 = 1200/exp(x2)
plot(x2, y2, type = 'l')
y2 = 1200/exp(x2)^.5
plot(x2, y2, type = 'l')
y2 = 100 + 1200/exp(x2)^.5
plot(x2, y2, type = 'l')
data.frame(ID = 1,
x1 = 1:45,
y1 = 1500 + 1000*sin(x/6))
data.frame(ID = 2,
x2 = 1:14,
y2 = 100 + 1200/exp(x2)^.5)
rbind(data.frame(ID = 1,
x1 = 1:45,
y1 = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x2 = 1:14,
y2 = 100 + 1200/exp(x2)^.5))
cbind(data.frame(ID = 1,
x1 = 1:45,
y1 = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x2 = 1:14,
y2 = 100 + 1200/exp(x2)^.5))
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x = 1:14,
y = 100 + 1200/exp(x2)^.5))
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x = 1:14,
y = 100 + 1200/exp(x2)^.5)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(x2)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(x)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(x)^.25)
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/6)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/8)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 1000*sin(x/7)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 800*sin(x/7)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line()
rbind(data.frame(ID = 1,
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame(ID = 2,
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line() +
labs(x = "Maanden", y = "Zorgconsumptie in €'s")
rnbinom(1, size = 0.85, mu = 200) %>%
data.frame() %>%
ggplot(aes(.)) + geom_boxplot()
rnbinom(40000, size = 0.85, mu = 200) %>%
data.frame() %>%
ggplot(aes(.)) + geom_boxplot()
rnbinom(40000, size = 0.85, mu = 200) %>% head()
rnbinom(40000, size = 0.85, mu = 200) %>%
data.frame() %>% names9)
rnbinom(40000, size = 0.85, mu = 200) %>%
data.frame() %>% names()
rnbinom(40000, size = 0.85, mu = 200) %>%
data.frame() %>%
ggplot(aes(.)) + geom_boxplot()
rnbinom(40000, size = 0.85, mu = 200) %>%
tibble() %>%
ggplot(aes(.)) + geom_boxplot()
tibble(euros = rnbinom(40000, size = 0.85, mu = 200)) %>%
ggplot(aes(.)) + geom_boxplot()
tibble(euros = rnbinom(40000, size = 0.85, mu = 200)) %>%
ggplot(aes(euros)) + geom_boxplot()
tibble(euros = rnbinom(40000, size = 0.85, mu = 200)) %>%
ggplot(aes(euros)) + geom_histogram()
tibble(euros = rnbinom(40000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram()
tibble(euros = rnbinom(4000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram()
tibble(euros = rnbinom(20000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram()
tibble(euros = rnbinom(20000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram(aes(y=..density..))
tibble(euros = rnbinom(20000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram()
tibble(euros = rnbinom(20000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram() +
labs(x = "Maandelijkse kosten in euros",
y = "Hoeveelheid")
tibble(euros = rnbinom(20000, size = 0.8, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram() +
labs(x = "Maandelijkse kosten in euros",
y = "Hoeveelheid")
tibble(euros = rnbinom(20000, size = 0.85, mu = 500)) %>%
ggplot(aes(euros)) + geom_histogram() +
labs(x = "Maandelijkse kosten in euros",
y = "Hoeveelheid")
rbind(data.frame("Cliënt"= "A",
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame("Cliënt" = "B",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = ID)) + geom_line() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "A",
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame("Cliënt" = "B",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = "Cliënt")) + geom_line() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "A",
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame("Cliënt" = "B",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, group = Cliënt)) + geom_line() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "A",
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame("Cliënt" = "B",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, colour = Cliënt)) + geom_line() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "B",
x = 1:45,
y = 1500 + 800*sin(c(1:45)/7)),
data.frame("Cliënt" = "A",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, colour = Cliënt)) + geom_line() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "B",
x = 1:45,
y = 1500 + 600*sin(c(1:45)/8)),
data.frame("Cliënt" = "A",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, colour = Cliënt)) +
geom_line() +
geom_point() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
rbind(data.frame("Cliënt"= "B",
x = 1:45,
y = 1500 + 600*sin(c(1:45)/7)),
data.frame("Cliënt" = "A",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25)) %>%
ggplot(aes(x = x, y = y, colour = Cliënt)) +
geom_line() +
geom_point() +
labs(x = "Maanden", y = "Maandelijkse zorgconsumptie in euros", title = "Het zorgverloop van twee cliënten")
n = 3000
len = rweibull(n,  shape = 1, scale = 14) %>% round()
len = len[which(len> 4)]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram
n = 3000
len = rweibull(n,  shape = 1, scale = 14) %>% round()
len = len[which(len> 4)]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len> 4)]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) | which(len < 48)  ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
len = len[which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
len = len[which(len > 4) && which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) && which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
set.seed(800)
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) && which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
set.seed(200)
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) && which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
set.seed(2019)
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) && which(len < 48) ]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
set.seed(2019)
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) & which(len < 48)]
len %>% data.frame() %>% ggplot(aes(.)) + geom_histogram()
len %>% data.frame() %>% ggplot(aes(.)) +
geom_histogram() + coord_cartesian(xlim = c(0, 50))
len %>% data.frame() %>% ggplot(aes(.)) +
geom_histogram() + coord_cartesian(xlim = c(0, 45))
len %>% data.frame() %>% ggplot(aes(.)) +
geom_histogram() + coord_cartesian(xlim = c(0, 48))
set.seed(2019)
n = 3000
len = rweibull(n,  shape = 1, scale = 10) %>% round()
len = len[which(len > 4) & which(len < 48)]
len %>% data.frame() %>% ggplot(aes(.)) +
geom_histogram(bins = 50) + coord_cartesian(xlim = c(0, 48))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(purrr)
theme_set(theme_bw())
sims = rbind(data.frame("Cliënt"= "B",
x = 1:45,
y = 1500 + 600*sin(c(1:45)/7)),
data.frame("Cliënt" = "A",
x = 1:25,
y = 100 + 1200/exp(1:25)^.25))
sims %>% group_by("Cliënt") %>% summarize(totaal = sum(y))
sims %>% group_by(Cliënt) %>% summarize(totaal = sum(y))
citation("JMbayes")
citation("rstanarm")
citation("rstanarm", bibtex = TRUE)
print(citation("rstanarm"), bibtex=TRUE)
@Misc{,
title = {Joint longitudinal and time-to-event models via {Stan}.},
author = {SL Brilleman and MJ Crowther and M Moreno-Betancur and J {Buros Novik} and R Wolfe},
note = {StanCon 2018. 10-12 Jan 2018. Pacific Grove, CA, USA.},
url = {https://github.com/stan-dev/stancon_talk
citation("R")
citation("Rcore")
'citation()'
?citation
citation()
devtools::install_github("rstudio/r2d3")
knitr::opts_chunk$set(echo = TRUE)
library(r2d3)
r2d3(data = test, script = "d3.js")
library(r2d3)
r2d3(data = test, script = "d3.js")
test = data.frame(x = rnorm(100),
y = rnorm(100))
r2d3(data = test, script = "d3.js")
library(r2d3)
bars <- c(10, 20, 30)
r2d3(data = test, script = "d3.js")
r2d3(data = test, script = "d3.js")
r2d3(data = test, script = "d3.js")
library(tidyverse)
library(jsonlite)
test = data.frame(x = rnorm(100),
y = rnorm(100)) %>% toJSON()
r2d3(data = test, script = "d3.js")
r2d3(data = test, script = "d3.js")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(jsonlite)
library(r2d3)
test = data.frame(x = rnorm(100),
y = rnorm(100))
r2d3(data = test, script = "d3.js")
r2d3::r2d3("d3.js", data=test)
r2d3::r2d3("script.js", data=c())
r2d3::r2d3("script.js", data=c())
r2d3::r2d3("script.js", data=c())
r2d3::r2d3("script.js", data=c())
r2d3::r2d3("d3.js", data=test)
r2d3::r2d3("d3.js", data = test)
r2d3::r2d3("d3.js", data = test)
r2d3::r2d3("d3.js", data = test)
r2d3::r2d3("script.js", data=c())
test = data.frame(x = rnorm(100),
y = rnorm(100))
r2d3(data = test, script = "d3.js")
r2d3(data = data.frame(x = rnorm(100),
y = rnorm(100)), script = "d3.js")
r2d3::r2d3("d3.js", data = data.frame(x = rnorm(100), )
r2d3::r2d3("d3.js", data = data.frame(x = rnorm(100), y = rnorm(100)))
r2d3::r2d3("d3.js", data = data.frame(x = rnorm(100), y = rnorm(100)))
r2d3(data = data.frame(x = rnorm(100),
y = rnorm(100)), script = "d3.js")
r2d3(data = data.frame(x = rnorm(100),
y = rnorm(100)), script = "d3.js")
r2d3(data = data.frame(x = rnorm(100),
y = rnorm(100)), script = "d3.js")
r2d3::r2d3("d3.js", data = data.frame(x = rnorm(100), y = rnorm(100)))
r2d3::r2d3("d3.js", data = data.frame(x = rnorm(100), y = rnorm(100)))
test = data.frame(x = rnorm(100),
y = rnorm(100))
r2d3(data = toJSON(test), script = "d3.js")
r2d3::r2d3("d3.js", data = toJSON(test))
r2d3::r2d3("d3.js", data = toJSON(test))
cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
test = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
r2d3(data=test, script = "d3.js")
r2d3(data=data, script = "d3.js")
r2d3::r2d3("d3.js", data=data.frame(x = rnorm(100), y = rnorm(100)))
test = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
r2d3::r2d3("d3.js", data=data.frame(x = rnorm(100), y = rnorm(100)))
r2d3(data=var, script = "d3.js")
r2d3(data=data.frame(x = rnorm(100),y = rnorm(100)), script = "d3.js")
r2d3(data=data.frame(x = rnorm(100),y = rnorm(100)), script = "d3.js")
r2d3(data=data.frame(x = rnorm(100),y = rnorm(100)), script = "d3.js")
test = data.frame(x = rnorm(100),
y = rnorm(100)) %>% toJSON
r2d3::r2d3("d3.js", data=test)
r2d3::r2d3("d3.js", data=test)
r2d3::r2d3("d3.js", data=test)
test = data.frame(x = rnorm(5),
y = rnorm(5)) %>% toJSON
test
data_to_json <- function(data) {
jsonlite::toJSON(data, dataframe = "rows", auto_unbox = FALSE, rownames = TRUE)
}
r2d3(data = data_to_json(test), script = "d3.js")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)))
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)))
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)))
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
object = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
r2d3(data = object, script = "d3.js")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
object = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
paste(
"var data = ',toJSON(test),';"
)
object = cat(
paste(
"var data = ',toJSON(test),';"
))
object
object = cat(
paste(
"var data = 'toJSON(test);"
))
object
object = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
object = cat(
paste(
'var data = ',toJSON(test),';'
, sep="")
)
object
object
object = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
object
cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
test = cat(
paste(
'<script>
var data = ',toJSON(test),';
</script>'
, sep="")
)
test
object = cat(
paste(
'var data = ',toJSON(test),';'
, sep="")
)
r2d3(data = object , script = "d3.js")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
r2d3(data = object , script = "d3.js")
object = cat(
paste(
'data = ',toJSON(test, dataframe = "rows", auto_unbox = FALSE, rownames = TRUE),';'
, sep="")
)
r2d3(data = object , script = "d3.js")
r2d3::r2d3("d3.js", data= data.frame(x = rnorm(5), y = rnorm(5)), viewer="browser")
